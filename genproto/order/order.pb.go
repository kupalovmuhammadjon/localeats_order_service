// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: order.proto

package order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DishId   string `protobuf:"bytes,1,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetDishId() string {
	if x != nil {
		return x.DishId
	}
	return ""
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReqCreateOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KitchenId       string  `protobuf:"bytes,1,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	UserId          string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Items           []*Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	DeliveryAddress string  `protobuf:"bytes,4,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	DeliveryTime    string  `protobuf:"bytes,5,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
}

func (x *ReqCreateOrder) Reset() {
	*x = ReqCreateOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateOrder) ProtoMessage() {}

func (x *ReqCreateOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateOrder.ProtoReflect.Descriptor instead.
func (*ReqCreateOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *ReqCreateOrder) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *ReqCreateOrder) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqCreateOrder) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ReqCreateOrder) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *ReqCreateOrder) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

type OrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KitchenId       string  `protobuf:"bytes,3,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Items           []*Item `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	TotalAmount     float64 `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Status          string  `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	DeliveryAddress string  `protobuf:"bytes,7,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	DeliveryTime    string  `protobuf:"bytes,8,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	CreatedAt       string  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string  `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *OrderInfo) Reset() {
	*x = OrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfo) ProtoMessage() {}

func (x *OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfo.ProtoReflect.Descriptor instead.
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrderInfo) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *OrderInfo) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderInfo) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderInfo) GetDeliveryAddress() string {
	if x != nil {
		return x.DeliveryAddress
	}
	return ""
}

func (x *OrderInfo) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *OrderInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Orders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*OrderShortInfo `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Total  int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page   int32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32             `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Orders) Reset() {
	*x = Orders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orders) ProtoMessage() {}

func (x *Orders) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orders.ProtoReflect.Descriptor instead.
func (*Orders) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

func (x *Orders) GetOrders() []*OrderShortInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *Orders) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Orders) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Orders) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type OrderShortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username     string  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Status       string  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TotalAmount  float64 `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	DeliveryTime string  `protobuf:"bytes,6,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
}

func (x *OrderShortInfo) Reset() {
	*x = OrderShortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderShortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderShortInfo) ProtoMessage() {}

func (x *OrderShortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderShortInfo.ProtoReflect.Descriptor instead.
func (*OrderShortInfo) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *OrderShortInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderShortInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrderShortInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OrderShortInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderShortInfo) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderShortInfo) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *Status) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Status) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StatusRes) Reset() {
	*x = StatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRes) ProtoMessage() {}

func (x *StatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRes.ProtoReflect.Descriptor instead.
func (*StatusRes) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *StatusRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatusRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Page  int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *Filter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Filter) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Filter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *DateFilter) Reset() {
	*x = DateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateFilter) ProtoMessage() {}

func (x *DateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateFilter.ProtoReflect.Descriptor instead.
func (*DateFilter) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

func (x *DateFilter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DateFilter) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DateFilter) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type Dish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	KitchenName string  `protobuf:"bytes,3,opt,name=kitchen_name,json=kitchenName,proto3" json:"kitchen_name,omitempty"`
	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Rating      float32 `protobuf:"fixed32,5,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *Dish) Reset() {
	*x = Dish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dish) ProtoMessage() {}

func (x *Dish) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dish.ProtoReflect.Descriptor instead.
func (*Dish) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

func (x *Dish) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dish) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dish) GetKitchenName() string {
	if x != nil {
		return x.KitchenName
	}
	return ""
}

func (x *Dish) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Dish) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type Recommendations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dishes []*Dish `protobuf:"bytes,1,rep,name=dishes,proto3" json:"dishes,omitempty"`
	Total  int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page   int32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Recommendations) Reset() {
	*x = Recommendations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recommendations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommendations) ProtoMessage() {}

func (x *Recommendations) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommendations.ProtoReflect.Descriptor instead.
func (*Recommendations) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *Recommendations) GetDishes() []*Dish {
	if x != nil {
		return x.Dishes
	}
	return nil
}

func (x *Recommendations) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Recommendations) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Recommendations) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DishStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OrdersCount int32   `protobuf:"varint,3,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	Revenue     float32 `protobuf:"fixed32,4,opt,name=revenue,proto3" json:"revenue,omitempty"`
}

func (x *DishStats) Reset() {
	*x = DishStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishStats) ProtoMessage() {}

func (x *DishStats) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishStats.ProtoReflect.Descriptor instead.
func (*DishStats) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{13}
}

func (x *DishStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DishStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishStats) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *DishStats) GetRevenue() float32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

type HourStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hour        string  `protobuf:"bytes,1,opt,name=hour,proto3" json:"hour,omitempty"`
	OrdersCount int32   `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	Revenue     float32 `protobuf:"fixed32,3,opt,name=revenue,proto3" json:"revenue,omitempty"`
}

func (x *HourStats) Reset() {
	*x = HourStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HourStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourStats) ProtoMessage() {}

func (x *HourStats) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourStats.ProtoReflect.Descriptor instead.
func (*HourStats) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{14}
}

func (x *HourStats) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *HourStats) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *HourStats) GetRevenue() float32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

type KitchenStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalOrders   int64        `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	TotalRevenue  float64      `protobuf:"fixed64,2,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
	AverageRating float32      `protobuf:"fixed32,3,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	TopDishes     []*DishStats `protobuf:"bytes,4,rep,name=top_dishes,json=topDishes,proto3" json:"top_dishes,omitempty"`
	BusiestHours  []*HourStats `protobuf:"bytes,5,rep,name=busiest_hours,json=busiestHours,proto3" json:"busiest_hours,omitempty"`
}

func (x *KitchenStatistics) Reset() {
	*x = KitchenStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KitchenStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KitchenStatistics) ProtoMessage() {}

func (x *KitchenStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KitchenStatistics.ProtoReflect.Descriptor instead.
func (*KitchenStatistics) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{15}
}

func (x *KitchenStatistics) GetTotalOrders() int64 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *KitchenStatistics) GetTotalRevenue() float64 {
	if x != nil {
		return x.TotalRevenue
	}
	return 0
}

func (x *KitchenStatistics) GetAverageRating() float32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *KitchenStatistics) GetTopDishes() []*DishStats {
	if x != nil {
		return x.TopDishes
	}
	return nil
}

func (x *KitchenStatistics) GetBusiestHours() []*HourStats {
	if x != nil {
		return x.BusiestHours
	}
	return nil
}

type CuisineStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CuisineType string  `protobuf:"bytes,1,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	OrdersCount int64   `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	TotalSpent  float64 `protobuf:"fixed64,3,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
}

func (x *CuisineStats) Reset() {
	*x = CuisineStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CuisineStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CuisineStats) ProtoMessage() {}

func (x *CuisineStats) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CuisineStats.ProtoReflect.Descriptor instead.
func (*CuisineStats) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{16}
}

func (x *CuisineStats) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *CuisineStats) GetOrdersCount() int64 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *CuisineStats) GetTotalSpent() float64 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

type KitchenStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OrdersCount int64   `protobuf:"varint,3,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	TotalSpent  float64 `protobuf:"fixed64,4,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
}

func (x *KitchenStats) Reset() {
	*x = KitchenStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KitchenStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KitchenStats) ProtoMessage() {}

func (x *KitchenStats) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KitchenStats.ProtoReflect.Descriptor instead.
func (*KitchenStats) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{17}
}

func (x *KitchenStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KitchenStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KitchenStats) GetOrdersCount() int64 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *KitchenStats) GetTotalSpent() float64 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

type UserStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalOrders      int64           `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	TotalSpent       float64         `protobuf:"fixed64,2,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
	AverageRating    float32         `protobuf:"fixed32,3,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	FavoriteCuisines []*CuisineStats `protobuf:"bytes,4,rep,name=favorite_cuisines,json=favoriteCuisines,proto3" json:"favorite_cuisines,omitempty"`
	FavoriteKitchens []*KitchenStats `protobuf:"bytes,5,rep,name=favorite_kitchens,json=favoriteKitchens,proto3" json:"favorite_kitchens,omitempty"`
}

func (x *UserStatistics) Reset() {
	*x = UserStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatistics) ProtoMessage() {}

func (x *UserStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatistics.ProtoReflect.Descriptor instead.
func (*UserStatistics) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{18}
}

func (x *UserStatistics) GetTotalOrders() int64 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *UserStatistics) GetTotalSpent() float64 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *UserStatistics) GetAverageRating() float32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *UserStatistics) GetFavoriteCuisines() []*CuisineStats {
	if x != nil {
		return x.FavoriteCuisines
	}
	return nil
}

func (x *UserStatistics) GetFavoriteKitchens() []*KitchenStats {
	if x != nil {
		return x.FavoriteKitchens
	}
	return nil
}

type WorkingHoursOfDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open      string `protobuf:"bytes,1,opt,name=open,proto3" json:"open,omitempty"`
	Close     string `protobuf:"bytes,2,opt,name=close,proto3" json:"close,omitempty"`
	IsWorkDay bool   `protobuf:"varint,3,opt,name=is_work_day,json=isWorkDay,proto3" json:"is_work_day,omitempty"`
}

func (x *WorkingHoursOfDay) Reset() {
	*x = WorkingHoursOfDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHoursOfDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHoursOfDay) ProtoMessage() {}

func (x *WorkingHoursOfDay) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHoursOfDay.ProtoReflect.Descriptor instead.
func (*WorkingHoursOfDay) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{19}
}

func (x *WorkingHoursOfDay) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *WorkingHoursOfDay) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *WorkingHoursOfDay) GetIsWorkDay() bool {
	if x != nil {
		return x.IsWorkDay
	}
	return false
}

type WorkingHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KitchenId string             `protobuf:"bytes,1,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Monday    *WorkingHoursOfDay `protobuf:"bytes,2,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   *WorkingHoursOfDay `protobuf:"bytes,3,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday *WorkingHoursOfDay `protobuf:"bytes,4,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  *WorkingHoursOfDay `protobuf:"bytes,5,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    *WorkingHoursOfDay `protobuf:"bytes,6,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday  *WorkingHoursOfDay `protobuf:"bytes,7,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    *WorkingHoursOfDay `protobuf:"bytes,8,opt,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *WorkingHours) Reset() {
	*x = WorkingHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHours) ProtoMessage() {}

func (x *WorkingHours) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHours.ProtoReflect.Descriptor instead.
func (*WorkingHours) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{20}
}

func (x *WorkingHours) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *WorkingHours) GetMonday() *WorkingHoursOfDay {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *WorkingHours) GetTuesday() *WorkingHoursOfDay {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *WorkingHours) GetWednesday() *WorkingHoursOfDay {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *WorkingHours) GetThursday() *WorkingHoursOfDay {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *WorkingHours) GetFriday() *WorkingHoursOfDay {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *WorkingHours) GetSaturday() *WorkingHoursOfDay {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *WorkingHours) GetSunday() *WorkingHoursOfDay {
	if x != nil {
		return x.Sunday
	}
	return nil
}

type WorkingHoursRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KitchenId string             `protobuf:"bytes,1,opt,name=kitchen_id,json=kitchenId,proto3" json:"kitchen_id,omitempty"`
	Monday    *WorkingHoursOfDay `protobuf:"bytes,2,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday   *WorkingHoursOfDay `protobuf:"bytes,3,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday *WorkingHoursOfDay `protobuf:"bytes,4,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday  *WorkingHoursOfDay `protobuf:"bytes,5,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday    *WorkingHoursOfDay `protobuf:"bytes,6,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday  *WorkingHoursOfDay `protobuf:"bytes,7,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday    *WorkingHoursOfDay `protobuf:"bytes,8,opt,name=sunday,proto3" json:"sunday,omitempty"`
	CreatedAt string             `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string             `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *WorkingHoursRes) Reset() {
	*x = WorkingHoursRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingHoursRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingHoursRes) ProtoMessage() {}

func (x *WorkingHoursRes) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingHoursRes.ProtoReflect.Descriptor instead.
func (*WorkingHoursRes) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{21}
}

func (x *WorkingHoursRes) GetKitchenId() string {
	if x != nil {
		return x.KitchenId
	}
	return ""
}

func (x *WorkingHoursRes) GetMonday() *WorkingHoursOfDay {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *WorkingHoursRes) GetTuesday() *WorkingHoursOfDay {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *WorkingHoursRes) GetWednesday() *WorkingHoursOfDay {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *WorkingHoursRes) GetThursday() *WorkingHoursOfDay {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *WorkingHoursRes) GetFriday() *WorkingHoursOfDay {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *WorkingHoursRes) GetSaturday() *WorkingHoursOfDay {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *WorkingHoursRes) GetSunday() *WorkingHoursOfDay {
	if x != nil {
		return x.Sunday
	}
	return nil
}

func (x *WorkingHoursRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkingHoursRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xbf, 0x02, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63,
	0x68, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x77, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x0e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x52, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x56, 0x0a, 0x0a, 0x44, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x7b, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x76, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x52,
	0x06, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x09, 0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x11, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f,
	0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09,
	0x74, 0x6f, 0x70, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x62, 0x75, 0x73,
	0x69, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x22, 0x75, 0x0a, 0x0c, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x0c, 0x4b, 0x69, 0x74, 0x63, 0x68,
	0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22,
	0xff, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x70, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a,
	0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x10, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x40, 0x0a, 0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x69, 0x74, 0x63,
	0x68, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x10, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x73, 0x22, 0x5d, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x61, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x79,
	0x22, 0x9b, 0x03, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64,
	0x61, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x07, 0x74,
	0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x36, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73,
	0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x34,
	0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72,
	0x73, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x06,
	0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64,
	0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44,
	0x61, 0x79, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0xdc,
	0x03, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x06, 0x6d, 0x6f, 0x6e,
	0x64, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x07,
	0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x36, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65,
	0x73, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f,
	0x66, 0x44, 0x61, 0x79, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12,
	0x34, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x08, 0x74, 0x68, 0x75,
	0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52,
	0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72,
	0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xcc, 0x04,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x10, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x09, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64,
	0x1a, 0x10, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x66, 0x12, 0x0d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64,
	0x1a, 0x0b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x09, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x0b, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x0d, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x43, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x11, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x18, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x11, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x34, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x09, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x10, 0x5a, 0x0e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_order_proto_goTypes = []interface{}{
	(*Item)(nil),              // 0: order.Item
	(*ReqCreateOrder)(nil),    // 1: order.ReqCreateOrder
	(*OrderInfo)(nil),         // 2: order.OrderInfo
	(*Orders)(nil),            // 3: order.Orders
	(*OrderShortInfo)(nil),    // 4: order.OrderShortInfo
	(*Id)(nil),                // 5: order.Id
	(*Void)(nil),              // 6: order.Void
	(*Status)(nil),            // 7: order.Status
	(*StatusRes)(nil),         // 8: order.StatusRes
	(*Filter)(nil),            // 9: order.Filter
	(*DateFilter)(nil),        // 10: order.DateFilter
	(*Dish)(nil),              // 11: order.Dish
	(*Recommendations)(nil),   // 12: order.Recommendations
	(*DishStats)(nil),         // 13: order.DishStats
	(*HourStats)(nil),         // 14: order.HourStats
	(*KitchenStatistics)(nil), // 15: order.KitchenStatistics
	(*CuisineStats)(nil),      // 16: order.CuisineStats
	(*KitchenStats)(nil),      // 17: order.KitchenStats
	(*UserStatistics)(nil),    // 18: order.UserStatistics
	(*WorkingHoursOfDay)(nil), // 19: order.WorkingHoursOfDay
	(*WorkingHours)(nil),      // 20: order.WorkingHours
	(*WorkingHoursRes)(nil),   // 21: order.WorkingHoursRes
}
var file_order_proto_depIdxs = []int32{
	0,  // 0: order.ReqCreateOrder.items:type_name -> order.Item
	0,  // 1: order.OrderInfo.items:type_name -> order.Item
	4,  // 2: order.Orders.orders:type_name -> order.OrderShortInfo
	11, // 3: order.Recommendations.dishes:type_name -> order.Dish
	13, // 4: order.KitchenStatistics.top_dishes:type_name -> order.DishStats
	14, // 5: order.KitchenStatistics.busiest_hours:type_name -> order.HourStats
	16, // 6: order.UserStatistics.favorite_cuisines:type_name -> order.CuisineStats
	17, // 7: order.UserStatistics.favorite_kitchens:type_name -> order.KitchenStats
	19, // 8: order.WorkingHours.monday:type_name -> order.WorkingHoursOfDay
	19, // 9: order.WorkingHours.tuesday:type_name -> order.WorkingHoursOfDay
	19, // 10: order.WorkingHours.wednesday:type_name -> order.WorkingHoursOfDay
	19, // 11: order.WorkingHours.thursday:type_name -> order.WorkingHoursOfDay
	19, // 12: order.WorkingHours.friday:type_name -> order.WorkingHoursOfDay
	19, // 13: order.WorkingHours.saturday:type_name -> order.WorkingHoursOfDay
	19, // 14: order.WorkingHours.sunday:type_name -> order.WorkingHoursOfDay
	19, // 15: order.WorkingHoursRes.monday:type_name -> order.WorkingHoursOfDay
	19, // 16: order.WorkingHoursRes.tuesday:type_name -> order.WorkingHoursOfDay
	19, // 17: order.WorkingHoursRes.wednesday:type_name -> order.WorkingHoursOfDay
	19, // 18: order.WorkingHoursRes.thursday:type_name -> order.WorkingHoursOfDay
	19, // 19: order.WorkingHoursRes.friday:type_name -> order.WorkingHoursOfDay
	19, // 20: order.WorkingHoursRes.saturday:type_name -> order.WorkingHoursOfDay
	19, // 21: order.WorkingHoursRes.sunday:type_name -> order.WorkingHoursOfDay
	1,  // 22: order.Order.CreateOrder:input_type -> order.ReqCreateOrder
	7,  // 23: order.Order.UpdateOrderStatus:input_type -> order.Status
	5,  // 24: order.Order.GetOrderById:input_type -> order.Id
	9,  // 25: order.Order.GetOrdersForUser:input_type -> order.Filter
	9,  // 26: order.Order.GetOrdersForChef:input_type -> order.Filter
	5,  // 27: order.Order.DeleteOrder:input_type -> order.Id
	5,  // 28: order.Order.ValidateOrderId:input_type -> order.Id
	9,  // 29: order.Order.RecommendDishes:input_type -> order.Filter
	10, // 30: order.Order.GetKitchenStatistics:input_type -> order.DateFilter
	10, // 31: order.Order.GetUserStatistics:input_type -> order.DateFilter
	5,  // 32: order.Order.ManageWorkingHours:input_type -> order.Id
	2,  // 33: order.Order.CreateOrder:output_type -> order.OrderInfo
	8,  // 34: order.Order.UpdateOrderStatus:output_type -> order.StatusRes
	2,  // 35: order.Order.GetOrderById:output_type -> order.OrderInfo
	3,  // 36: order.Order.GetOrdersForUser:output_type -> order.Orders
	3,  // 37: order.Order.GetOrdersForChef:output_type -> order.Orders
	6,  // 38: order.Order.DeleteOrder:output_type -> order.Void
	6,  // 39: order.Order.ValidateOrderId:output_type -> order.Void
	12, // 40: order.Order.RecommendDishes:output_type -> order.Recommendations
	15, // 41: order.Order.GetKitchenStatistics:output_type -> order.KitchenStatistics
	18, // 42: order.Order.GetUserStatistics:output_type -> order.UserStatistics
	20, // 43: order.Order.ManageWorkingHours:output_type -> order.WorkingHours
	33, // [33:44] is the sub-list for method output_type
	22, // [22:33] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderShortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recommendations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HourStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KitchenStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CuisineStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KitchenStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingHoursOfDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingHoursRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
